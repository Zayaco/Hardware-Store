{"ast":null,"code":"import { Carousel } from \"flowbite\";\nconst items = [{\n  position: 0,\n  el: document.getElementById('carousel-item-1')\n}, {\n  position: 1,\n  el: document.getElementById('carousel-item-2')\n}, {\n  position: 2,\n  el: document.getElementById('carousel-item-3')\n}, {\n  position: 3,\n  el: document.getElementById('carousel-item-4')\n}];\nconst options = {\n  defaultPosition: 1,\n  interval: 3000,\n  indicators: {\n    activeClasses: 'bg-white dark:bg-gray-800',\n    inactiveClasses: 'bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800',\n    items: [{\n      position: 0,\n      el: document.getElementById('carousel-indicator-1')\n    }, {\n      position: 1,\n      el: document.getElementById('carousel-indicator-2')\n    }, {\n      position: 2,\n      el: document.getElementById('carousel-indicator-3')\n    }, {\n      position: 3,\n      el: document.getElementById('carousel-indicator-4')\n    }]\n  },\n  // callback functions\n  onNext: () => {\n    console.log('next slider item is shown');\n  },\n  onPrev: () => {\n    console.log('previous slider item is shown');\n  },\n  onChange: () => {\n    console.log('new slider item has been shown');\n  }\n};\nconst carousel = new Carousel(items, options);\ncarousel.cycle();\n// set event listeners for prev and next buttons\nconst $prevButton = document.getElementById('data-carousel-prev');\nconst $nextButton = document.getElementById('data-carousel-next');\n$prevButton.addEventListener('click', () => {\n  carousel.prev();\n});\n$nextButton.addEventListener('click', () => {\n  carousel.next();\n});","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,QAAQ,UAAU;AAGnC,MAAMC,KAAK,GAAmB,CAC1B;EACIC,QAAQ,EAAE,CAAC;EACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,iBAAiB;CAChD,EACD;EACIH,QAAQ,EAAE,CAAC;EACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,iBAAiB;CAChD,EACD;EACIH,QAAQ,EAAE,CAAC;EACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,iBAAiB;CAChD,EACD;EACIH,QAAQ,EAAE,CAAC;EACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,iBAAiB;CAChD,CACJ;AAED,MAAMC,OAAO,GAAoB;EAC7BC,eAAe,EAAE,CAAC;EAClBC,QAAQ,EAAE,IAAI;EAEdC,UAAU,EAAE;IACRC,aAAa,EAAE,2BAA2B;IAC1CC,eAAe,EAAE,uEAAuE;IACxFV,KAAK,EAAE,CACH;MACIC,QAAQ,EAAE,CAAC;MACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,sBAAsB;KACrD,EACD;MACIH,QAAQ,EAAE,CAAC;MACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,sBAAsB;KACrD,EACD;MACIH,QAAQ,EAAE,CAAC;MACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,sBAAsB;KACrD,EACD;MACIH,QAAQ,EAAE,CAAC;MACXC,EAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,sBAAsB;KACrD;GAER;EAED;EACAO,MAAM,EAAE,MAAK;IACTC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC5C,CAAC;EACDC,MAAM,EAAE,MAAM;IACVF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAChD,CAAC;EACDE,QAAQ,EAAE,MAAM;IACZH,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EACjD;CACH;AAED,MAAMG,QAAQ,GAAsB,IAAIjB,QAAQ,CAACC,KAAK,EAAEK,OAAO,CAAC;AAEhEW,QAAQ,CAACC,KAAK,EAAE;AAEhB;AACA,MAAMC,WAAW,GAAGf,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;AACjE,MAAMe,WAAW,GAAGhB,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;AAEjEc,WAAY,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAK;EACxCJ,QAAQ,CAACK,IAAI,EAAE;AACnB,CAAC,CAAC;AAEFF,WAAY,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAK;EACxCJ,QAAQ,CAACM,IAAI,EAAE;AACnB,CAAC,CAAC","names":["Carousel","items","position","el","document","getElementById","options","defaultPosition","interval","indicators","activeClasses","inactiveClasses","onNext","console","log","onPrev","onChange","carousel","cycle","$prevButton","$nextButton","addEventListener","prev","next"],"sourceRoot":"","sources":["C:\\Users\\Nicol\\source\\repos\\Zayaco\\Hardware-Store\\FerreterÃ­a\\ClientApp\\src\\app\\modules\\website\\pages\\home\\home.component.ts"],"sourcesContent":["import { Carousel } from \"flowbite\";\nimport type { CarouselItem, CarouselOptions, CarouselInterface } from \"flowbite\";\n\nconst items: CarouselItem[] = [\n    {\n        position: 0,\n        el: document.getElementById('carousel-item-1')!\n    },\n    {\n        position: 1,\n        el: document.getElementById('carousel-item-2')!\n    },\n    {\n        position: 2,\n        el: document.getElementById('carousel-item-3')!\n    },\n    {\n        position: 3,\n        el: document.getElementById('carousel-item-4')!\n    },\n];\n\nconst options: CarouselOptions = {\n    defaultPosition: 1,\n    interval: 3000,\n\n    indicators: {\n        activeClasses: 'bg-white dark:bg-gray-800',\n        inactiveClasses: 'bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800',\n        items: [\n            {\n                position: 0,\n                el: document.getElementById('carousel-indicator-1')!\n            },\n            {\n                position: 1,\n                el: document.getElementById('carousel-indicator-2')!\n            },\n            {\n                position: 2,\n                el: document.getElementById('carousel-indicator-3')!\n            },\n            {\n                position: 3,\n                el: document.getElementById('carousel-indicator-4')!\n            },\n        ]\n    },\n\n    // callback functions\n    onNext: () => {\n        console.log('next slider item is shown');\n    },\n    onPrev: ( ) => {\n        console.log('previous slider item is shown');\n    },\n    onChange: ( ) => {\n        console.log('new slider item has been shown');\n    }\n};\n\nconst carousel: CarouselInterface = new Carousel(items, options);\n\ncarousel.cycle()\n\n// set event listeners for prev and next buttons\nconst $prevButton = document.getElementById('data-carousel-prev');\nconst $nextButton = document.getElementById('data-carousel-next');\n\n$prevButton!.addEventListener('click', () => {\n    carousel.prev();\n});\n\n$nextButton!.addEventListener('click', () => {\n    carousel.next();\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}